
testc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000041a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00802000  00802000  0000041a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000041a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000044c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000456b  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003c5b  00000000  00000000  00004a27  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000589  00000000  00000000  00008682  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000098  00000000  00000000  00008c0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002df5  00000000  00000000  00008ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000119  00000000  00000000  0000ba99  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000bbb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  38:	0c 94 86 01 	jmp	0x30c	; 0x30c <__vector_14>
  3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  fc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 100:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 104:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 108:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 10c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 110:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 114:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 118:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 11c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 120:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 124:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 128:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 12c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 130:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 134:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 138:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 13c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 140:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 144:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 148:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 14c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 150:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 154:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 158:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 15c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 160:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 164:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 168:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 16c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 170:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 174:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 178:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 17c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 180:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 184:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 188:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 18c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 190:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 194:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 198:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 19c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_clear_bss>:
 214:	20 e2       	ldi	r18, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
 21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
 21e:	a2 30       	cpi	r26, 0x02	; 2
 220:	b2 07       	cpc	r27, r18
 222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
 224:	0e 94 18 01 	call	0x230	; 0x230 <main>
 228:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <_exit>

0000022c <__bad_interrupt>:
 22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#define period (int)((2000000/1) / (3.744*1000))
int set;
int main(void) {
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 PORTA_DIR = 0xFE;	//input switch
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	96 e0       	ldi	r25, 0x06	; 6
 23c:	2e ef       	ldi	r18, 0xFE	; 254
 23e:	fc 01       	movw	r30, r24
 240:	20 83       	st	Z, r18
 
 PORTC_DIR = 0xFF;	//Output LED
 242:	80 e4       	ldi	r24, 0x40	; 64
 244:	96 e0       	ldi	r25, 0x06	; 6
 246:	2f ef       	ldi	r18, 0xFF	; 255
 248:	fc 01       	movw	r30, r24
 24a:	20 83       	st	Z, r18
 PORTC_OUT = 0xFF;	//Initially off
 24c:	84 e4       	ldi	r24, 0x44	; 68
 24e:	96 e0       	ldi	r25, 0x06	; 6
 250:	2f ef       	ldi	r18, 0xFF	; 255
 252:	fc 01       	movw	r30, r24
 254:	20 83       	st	Z, r18
 
 tcc0_init();
 256:	0e 94 65 01 	call	0x2ca	; 0x2ca <tcc0_init>
 
 while(1){
	 if(PORTA_IN ==0x00 && set==0){
 25a:	88 e0       	ldi	r24, 0x08	; 8
 25c:	96 e0       	ldi	r25, 0x06	; 6
 25e:	fc 01       	movw	r30, r24
 260:	80 81       	ld	r24, Z
 262:	88 23       	and	r24, r24
 264:	a9 f4       	brne	.+42     	; 0x290 <main+0x60>
 266:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <_edata>
 26a:	90 91 01 20 	lds	r25, 0x2001	; 0x802001 <_edata+0x1>
 26e:	89 2b       	or	r24, r25
 270:	79 f4       	brne	.+30     	; 0x290 <main+0x60>
		 tcc0_init();
 272:	0e 94 65 01 	call	0x2ca	; 0x2ca <tcc0_init>
		 PMIC_CTRL = PMIC_LOLVLEN_bm;	//Low level interrupts
 276:	82 ea       	ldi	r24, 0xA2	; 162
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	21 e0       	ldi	r18, 0x01	; 1
 27c:	fc 01       	movw	r30, r24
 27e:	20 83       	st	Z, r18
		 sei();	//global interrupt
 280:	78 94       	sei
		 set=1;
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <_edata>
 28a:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <_edata+0x1>
 28e:	1c c0       	rjmp	.+56     	; 0x2c8 <main+0x98>
	 }
	 else if (PORTA_IN ==0x01){
 290:	88 e0       	ldi	r24, 0x08	; 8
 292:	96 e0       	ldi	r25, 0x06	; 6
 294:	fc 01       	movw	r30, r24
 296:	80 81       	ld	r24, Z
 298:	81 30       	cpi	r24, 0x01	; 1
 29a:	f9 f6       	brne	.-66     	; 0x25a <main+0x2a>
		 TCC0.CNT = 0; //Initial value 0
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	98 e0       	ldi	r25, 0x08	; 8
 2a0:	fc 01       	movw	r30, r24
 2a2:	10 a2       	std	Z+32, r1	; 0x20
 2a4:	11 a2       	std	Z+33, r1	; 0x21
		 TCC0_CTRLA = 0x00;	//Prescaler = 1
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	98 e0       	ldi	r25, 0x08	; 8
 2aa:	fc 01       	movw	r30, r24
 2ac:	10 82       	st	Z, r1
		 TCC0.INTCTRLA = 0x00;
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	98 e0       	ldi	r25, 0x08	; 8
 2b2:	fc 01       	movw	r30, r24
 2b4:	16 82       	std	Z+6, r1	; 0x06
		 PORTC_OUTSET = 0xFF;	//Initially off
 2b6:	85 e4       	ldi	r24, 0x45	; 69
 2b8:	96 e0       	ldi	r25, 0x06	; 6
 2ba:	2f ef       	ldi	r18, 0xFF	; 255
 2bc:	fc 01       	movw	r30, r24
 2be:	20 83       	st	Z, r18
		 set =0;
 2c0:	10 92 00 20 	sts	0x2000, r1	; 0x802000 <_edata>
 2c4:	10 92 01 20 	sts	0x2001, r1	; 0x802001 <_edata+0x1>
	 }
 }
 2c8:	c8 cf       	rjmp	.-112    	; 0x25a <main+0x2a>

000002ca <tcc0_init>:
}

//Initialize TCC0 timer/counter
void tcc0_init(void){
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	cd b7       	in	r28, 0x3d	; 61
 2d0:	de b7       	in	r29, 0x3e	; 62
	TCC0.CNT = 0; //Initial value 0
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	98 e0       	ldi	r25, 0x08	; 8
 2d6:	fc 01       	movw	r30, r24
 2d8:	10 a2       	std	Z+32, r1	; 0x20
 2da:	11 a2       	std	Z+33, r1	; 0x21
	TCC0.INTCTRLA = TC_OVFINTLVL_LO_gc;	//Low level interrupt
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	98 e0       	ldi	r25, 0x08	; 8
 2e0:	21 e0       	ldi	r18, 0x01	; 1
 2e2:	fc 01       	movw	r30, r24
 2e4:	26 83       	std	Z+6, r18	; 0x06
	TCC0_PERL = (uint8_t) period;	//Period
 2e6:	86 e2       	ldi	r24, 0x26	; 38
 2e8:	98 e0       	ldi	r25, 0x08	; 8
 2ea:	26 e1       	ldi	r18, 0x16	; 22
 2ec:	fc 01       	movw	r30, r24
 2ee:	20 83       	st	Z, r18
	TCC0_PERH = (uint8_t) (period>>8);
 2f0:	87 e2       	ldi	r24, 0x27	; 39
 2f2:	98 e0       	ldi	r25, 0x08	; 8
 2f4:	22 e0       	ldi	r18, 0x02	; 2
 2f6:	fc 01       	movw	r30, r24
 2f8:	20 83       	st	Z, r18

	TCC0_CTRLA = 0x01;	//Prescaler = 1
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	98 e0       	ldi	r25, 0x08	; 8
 2fe:	21 e0       	ldi	r18, 0x01	; 1
 300:	fc 01       	movw	r30, r24
 302:	20 83       	st	Z, r18
	return;
 304:	00 00       	nop
}
 306:	df 91       	pop	r29
 308:	cf 91       	pop	r28
 30a:	08 95       	ret

0000030c <__vector_14>:


ISR(TCC0_OVF_vect){
 30c:	1f 92       	push	r1
 30e:	0f 92       	push	r0
 310:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 314:	0f 92       	push	r0
 316:	11 24       	eor	r1, r1
 318:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 31c:	0f 92       	push	r0
 31e:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 322:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 326:	0f 92       	push	r0
 328:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 32c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 330:	0f 92       	push	r0
 332:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 336:	2f 93       	push	r18
 338:	8f 93       	push	r24
 33a:	9f 93       	push	r25
 33c:	ef 93       	push	r30
 33e:	ff 93       	push	r31
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	1f 92       	push	r1
 346:	cd b7       	in	r28, 0x3d	; 61
 348:	de b7       	in	r29, 0x3e	; 62
	//Preserve Status Reg
	uint8_t temp = CPU_SREG;
 34a:	8f e3       	ldi	r24, 0x3F	; 63
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	fc 01       	movw	r30, r24
 350:	80 81       	ld	r24, Z
 352:	89 83       	std	Y+1, r24	; 0x01
	
	//Clear interrupt flags
	TCC0.INTFLAGS = 0x01;
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	98 e0       	ldi	r25, 0x08	; 8
 358:	21 e0       	ldi	r18, 0x01	; 1
 35a:	fc 01       	movw	r30, r24
 35c:	24 87       	std	Z+12, r18	; 0x0c
	
	//Toggle 
	PORTC_OUTTGL=0xFF;
 35e:	87 e4       	ldi	r24, 0x47	; 71
 360:	96 e0       	ldi	r25, 0x06	; 6
 362:	2f ef       	ldi	r18, 0xFF	; 255
 364:	fc 01       	movw	r30, r24
 366:	20 83       	st	Z, r18
	
	//Restore Status Reg
	CPU_SREG = temp;
 368:	8f e3       	ldi	r24, 0x3F	; 63
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	29 81       	ldd	r18, Y+1	; 0x01
 36e:	fc 01       	movw	r30, r24
 370:	20 83       	st	Z, r18
	//Return from ISR
	return;
 372:	00 00       	nop
 374:	0f 90       	pop	r0
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	ff 91       	pop	r31
 37c:	ef 91       	pop	r30
 37e:	9f 91       	pop	r25
 380:	8f 91       	pop	r24
 382:	2f 91       	pop	r18
 384:	0f 90       	pop	r0
 386:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 38a:	0f 90       	pop	r0
 38c:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 390:	0f 90       	pop	r0
 392:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 396:	0f 90       	pop	r0
 398:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 39c:	0f 90       	pop	r0
 39e:	1f 90       	pop	r1
 3a0:	18 95       	reti

000003a2 <_exit>:
 3a2:	f8 94       	cli

000003a4 <__stop_program>:
 3a4:	ff cf       	rjmp	.-2      	; 0x3a4 <__stop_program>
