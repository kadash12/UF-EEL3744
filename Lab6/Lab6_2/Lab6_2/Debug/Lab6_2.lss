
Lab6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000286  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00802000  00000286  000002fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000330  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004291  00000000  00000000  000003c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003cb9  00000000  00000000  00004651  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005fc  00000000  00000000  0000830a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00008908  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002cc1  00000000  00000000  00008970  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000002e  00000000  00000000  0000b631  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000b65f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 120:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e6 e8       	ldi	r30, 0x86	; 134
 21c:	f2 e0       	ldi	r31, 0x02	; 2
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a4 30       	cpi	r26, 0x04	; 4
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 1e 01 	call	0x23c	; 0x23c <main>
 234:	0c 94 41 01 	jmp	0x282	; 0x282 <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <main>:
#include "spi.h"


int main(void){
	//Initialize SPI
	spif_init();
 23c:	0e 94 24 01 	call	0x248	; 0x248 <spif_init>
	
	//Transmit 0x53 continuously
	while(TRUE){
		spif_write(0x53);
 240:	83 e5       	ldi	r24, 0x53	; 83
 242:	0e 94 33 01 	call	0x266	; 0x266 <spif_write>
 246:	fc cf       	rjmp	.-8      	; 0x240 <main+0x4>

00000248 <spif_init>:
extern const uint8_t PORTF_OUTSET_CONFIG;
//******************************END OF INCLUDES*********************************
/* initializes the SPI module of Port F to communicate with the LSM330 */
void spif_init(void){
  /* configure pin direction of SPI signals */
  PORTF.DIRSET	= PORTF_DIRSET_CONFIG;	//Output
 248:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <PORTF_DIRSET_CONFIG>
 24c:	e0 ea       	ldi	r30, 0xA0	; 160
 24e:	f6 e0       	ldi	r31, 0x06	; 6
 250:	81 83       	std	Z+1, r24	; 0x01
  PORTF.DIRCLR  = PORTF_DIRCLR_CONFIG;	//Input
 252:	80 91 01 20 	lds	r24, 0x2001	; 0x802001 <PORTF_DIRCLR_CONFIG>
 256:	82 83       	std	Z+2, r24	; 0x02
  PORTF.OUTSET  = PORTF_OUTSET_CONFIG;	//Set initial output as high.
 258:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <PORTF_OUTSET_CONFIG>
 25c:	85 83       	std	Z+5, r24	; 0x05

	/* 8 MHz SPI frequency since 10MHz is the maximum allowed by the LSM330 */
	SPIF.CTRL	=	SPI_PRESCALER_DIV4_gc	|	SPI_MASTER_bm	|	SPI_MODE_2_gc	|	SPI_ENABLE_bm;
 25e:	88 e5       	ldi	r24, 0x58	; 88
 260:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <__TEXT_REGION_LENGTH__+0x700bc0>
 264:	08 95       	ret

00000266 <spif_write>:
}

/* writes a single byte of data to the SPIF data register */
void spif_write(uint8_t data){
	//Enable Slave port f pin 4
	PORTF.OUTTGL = 0x10;
 266:	90 e1       	ldi	r25, 0x10	; 16
 268:	90 93 a7 06 	sts	0x06A7, r25	; 0x8006a7 <__TEXT_REGION_LENGTH__+0x7006a7>
	
	SPIF.DATA = data;
 26c:	80 93 c3 0b 	sts	0x0BC3, r24	; 0x800bc3 <__TEXT_REGION_LENGTH__+0x700bc3>
	while((SPIF.STATUS & 0x80) != 0x80);	/* wait for transfer to be complete */
 270:	e0 ec       	ldi	r30, 0xC0	; 192
 272:	fb e0       	ldi	r31, 0x0B	; 11
 274:	82 81       	ldd	r24, Z+2	; 0x02
 276:	88 23       	and	r24, r24
 278:	ec f7       	brge	.-6      	; 0x274 <spif_write+0xe>
	
	//Turn off slave select
	PORTF.OUTTGL = 0x10;
 27a:	80 e1       	ldi	r24, 0x10	; 16
 27c:	80 93 a7 06 	sts	0x06A7, r24	; 0x8006a7 <__TEXT_REGION_LENGTH__+0x7006a7>
 280:	08 95       	ret

00000282 <_exit>:
 282:	f8 94       	cli

00000284 <__stop_program>:
 284:	ff cf       	rjmp	.-2      	; 0x284 <__stop_program>
