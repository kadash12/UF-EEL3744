
Lab7_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000003f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000424  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000044d2  00000000  00000000  0000049c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003bd4  00000000  00000000  0000496e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000058b  00000000  00000000  00008542  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  00008ad0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003e1d  00000000  00000000  00008b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000161  00000000  00000000  0000c9a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000cb06  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
   8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
   c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  10:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  14:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  18:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  1c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  20:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  24:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  28:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  2c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  30:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  34:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  38:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  3c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  40:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  44:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  48:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  4c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  50:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  54:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  58:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  5c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  60:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  64:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  68:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  6c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  70:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  74:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  78:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  7c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  80:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  84:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  88:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  8c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  90:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  94:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  98:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  9c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  ac:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  bc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  cc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  dc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  ec:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  fc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 100:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 104:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 108:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 10c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 110:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 114:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 118:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 11c:	0c 94 89 01 	jmp	0x312	; 0x312 <__vector_71>
 120:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 124:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 128:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 12c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 130:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 134:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 138:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 13c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 140:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 144:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 148:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 14c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 150:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 154:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 158:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 15c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 160:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 164:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 168:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 16c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 170:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 174:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 178:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 17c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 180:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 184:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 188:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 18c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 190:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 194:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 198:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 19c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1ac:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1bc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1cc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1dc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1ec:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59
 214:	0e 94 77 01 	call	0x2ee	; 0x2ee <main>
 218:	0c 94 ce 01 	jmp	0x39c	; 0x39c <_exit>

0000021c <__bad_interrupt>:
 21c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000220 <tcc0_init>:
#include <avr/interrupt.h>

#define BLUE_PWM_LED PIN6_bm

//Initialize TCC0 timer
 void tcc0_init(void){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	1f 92       	push	r1
 226:	1f 92       	push	r1
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
	//SCK = 2MHz, Prescaler = 1024, Time = 0.5sec
	int period = (2000000/(1024*2));	//2 Hz
 22c:	80 ed       	ldi	r24, 0xD0	; 208
 22e:	93 e0       	ldi	r25, 0x03	; 3
 230:	89 83       	std	Y+1, r24	; 0x01
 232:	9a 83       	std	Y+2, r25	; 0x02
	
	//Set period
	TCC0_PERL = (uint8_t) period;	//Low Period
 234:	86 e2       	ldi	r24, 0x26	; 38
 236:	98 e0       	ldi	r25, 0x08	; 8
 238:	29 81       	ldd	r18, Y+1	; 0x01
 23a:	fc 01       	movw	r30, r24
 23c:	20 83       	st	Z, r18
	TCC0_PERH = (uint8_t) (period>>8);	//High Period
 23e:	87 e2       	ldi	r24, 0x27	; 39
 240:	98 e0       	ldi	r25, 0x08	; 8
 242:	29 81       	ldd	r18, Y+1	; 0x01
 244:	3a 81       	ldd	r19, Y+2	; 0x02
 246:	23 2f       	mov	r18, r19
 248:	33 0f       	add	r19, r19
 24a:	33 0b       	sbc	r19, r19
 24c:	fc 01       	movw	r30, r24
 24e:	20 83       	st	Z, r18

	//Normal mode timer
	TCC0_CTRLB = 0x00;
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	98 e0       	ldi	r25, 0x08	; 8
 254:	fc 01       	movw	r30, r24
 256:	10 82       	st	Z, r1
	
	//Trigger an event on Event Channel 0
	EVSYS_CH0MUX = EVSYS_CHMUX_TCC0_OVF_gc;
 258:	80 e8       	ldi	r24, 0x80	; 128
 25a:	91 e0       	ldi	r25, 0x01	; 1
 25c:	20 ec       	ldi	r18, 0xC0	; 192
 25e:	fc 01       	movw	r30, r24
 260:	20 83       	st	Z, r18

	//Set perscaler = 1024
	TCC0_CTRLA = 0x07;
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	98 e0       	ldi	r25, 0x08	; 8
 266:	27 e0       	ldi	r18, 0x07	; 7
 268:	fc 01       	movw	r30, r24
 26a:	20 83       	st	Z, r18
 }
 26c:	00 00       	nop
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	08 95       	ret

00000278 <adc_init>:

//Initialize ADC
void adc_init(void){
 278:	cf 93       	push	r28
 27a:	df 93       	push	r29
 27c:	cd b7       	in	r28, 0x3d	; 61
 27e:	de b7       	in	r29, 0x3e	; 62
	//12-bit signed, right-adjusted, Normal, 2.5Vref
	ADCA_CTRLB = ADC_RESOLUTION_12BIT_gc | ADC_CONMODE_bm;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	92 e0       	ldi	r25, 0x02	; 2
 284:	20 e1       	ldi	r18, 0x10	; 16
 286:	fc 01       	movw	r30, r24
 288:	20 83       	st	Z, r18
	ADCA_REFCTRL = ADC_REFSEL_AREFB_gc;		//2.5Vref
 28a:	82 e0       	ldi	r24, 0x02	; 2
 28c:	92 e0       	ldi	r25, 0x02	; 2
 28e:	20 e3       	ldi	r18, 0x30	; 48
 290:	fc 01       	movw	r30, r24
 292:	20 83       	st	Z, r18
	
	//ADC Clock prescaler=512
	ADCA_PRESCALER = ADC_PRESCALER_DIV512_gc;
 294:	84 e0       	ldi	r24, 0x04	; 4
 296:	92 e0       	ldi	r25, 0x02	; 2
 298:	27 e0       	ldi	r18, 0x07	; 7
 29a:	fc 01       	movw	r30, r24
 29c:	20 83       	st	Z, r18

	//Enable Port A
	PORTA_DIRCLR = PIN1_bm | PIN6_bm;	//PortA input pins
 29e:	82 e0       	ldi	r24, 0x02	; 2
 2a0:	96 e0       	ldi	r25, 0x06	; 6
 2a2:	22 e4       	ldi	r18, 0x42	; 66
 2a4:	fc 01       	movw	r30, r24
 2a6:	20 83       	st	Z, r18

	//Differential input signal with gain
	ADCA_CH0_CTRL = ADC_CH_INPUTMODE_DIFFWGAIN_gc;
 2a8:	80 e2       	ldi	r24, 0x20	; 32
 2aa:	92 e0       	ldi	r25, 0x02	; 2
 2ac:	23 e0       	ldi	r18, 0x03	; 3
 2ae:	fc 01       	movw	r30, r24
 2b0:	20 83       	st	Z, r18
	
	//MUXCTRL pin1 + and pin6 -
	ADCA_CH0_MUXCTRL = ADC_CH_MUXPOS_PIN1_gc | ADC_CH_MUXNEG_PIN6_gc;
 2b2:	81 e2       	ldi	r24, 0x21	; 33
 2b4:	92 e0       	ldi	r25, 0x02	; 2
 2b6:	2a e0       	ldi	r18, 0x0A	; 10
 2b8:	fc 01       	movw	r30, r24
 2ba:	20 83       	st	Z, r18
	
	//Setup ADC Low Level interrupt
	ADCA_CH0_INTCTRL = ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_LO_gc;	//Triggered on flag- when a conversion is complete
 2bc:	82 e2       	ldi	r24, 0x22	; 34
 2be:	92 e0       	ldi	r25, 0x02	; 2
 2c0:	21 e0       	ldi	r18, 0x01	; 1
 2c2:	fc 01       	movw	r30, r24
 2c4:	20 83       	st	Z, r18

	//Enable Low Level interrupts
	PMIC_CTRL = PMIC_LOLVLEN_bm;
 2c6:	82 ea       	ldi	r24, 0xA2	; 162
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	21 e0       	ldi	r18, 0x01	; 1
 2cc:	fc 01       	movw	r30, r24
 2ce:	20 83       	st	Z, r18
	//Enable global enable interrupts
	sei();
 2d0:	78 94       	sei

	//ADC conversion start when Event Channel 0 is triggered
	ADCA_EVCTRL = ADC_SWEEP_0_gc | ADC_EVSEL_0123_gc | ADC_EVACT_CH0_gc;
 2d2:	83 e0       	ldi	r24, 0x03	; 3
 2d4:	92 e0       	ldi	r25, 0x02	; 2
 2d6:	21 e0       	ldi	r18, 0x01	; 1
 2d8:	fc 01       	movw	r30, r24
 2da:	20 83       	st	Z, r18
	
	//Enable ADC
	ADCA_CTRLA = ADC_ENABLE_bm;
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	92 e0       	ldi	r25, 0x02	; 2
 2e0:	21 e0       	ldi	r18, 0x01	; 1
 2e2:	fc 01       	movw	r30, r24
 2e4:	20 83       	st	Z, r18
}
 2e6:	00 00       	nop
 2e8:	df 91       	pop	r29
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <main>:

int main(void){
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	cd b7       	in	r28, 0x3d	; 61
 2f4:	de b7       	in	r29, 0x3e	; 62
	//Initialize
	PORTD_OUTSET = 0x00;	//LED initially off
 2f6:	85 e6       	ldi	r24, 0x65	; 101
 2f8:	96 e0       	ldi	r25, 0x06	; 6
 2fa:	fc 01       	movw	r30, r24
 2fc:	10 82       	st	Z, r1
	PORTD_DIRSET = BLUE_PWM_LED;	//Set output
 2fe:	81 e6       	ldi	r24, 0x61	; 97
 300:	96 e0       	ldi	r25, 0x06	; 6
 302:	20 e4       	ldi	r18, 0x40	; 64
 304:	fc 01       	movw	r30, r24
 306:	20 83       	st	Z, r18
		
	adc_init();
 308:	0e 94 3c 01 	call	0x278	; 0x278 <adc_init>
	tcc0_init();
 30c:	0e 94 10 01 	call	0x220	; 0x220 <tcc0_init>
	
	//Loop conversion
	while (1){}
 310:	ff cf       	rjmp	.-2      	; 0x310 <main+0x22>

00000312 <__vector_71>:
		
	return 0;
}

//Interrupt Handler
ISR(ADCA_CH0_vect){
 312:	1f 92       	push	r1
 314:	0f 92       	push	r0
 316:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 31a:	0f 92       	push	r0
 31c:	11 24       	eor	r1, r1
 31e:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 322:	0f 92       	push	r0
 324:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 328:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 32c:	0f 92       	push	r0
 32e:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 332:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 336:	0f 92       	push	r0
 338:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 33c:	2f 93       	push	r18
 33e:	8f 93       	push	r24
 340:	9f 93       	push	r25
 342:	ef 93       	push	r30
 344:	ff 93       	push	r31
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	1f 92       	push	r1
 34c:	1f 92       	push	r1
 34e:	cd b7       	in	r28, 0x3d	; 61
 350:	de b7       	in	r29, 0x3e	; 62
	//Test ADC value
	int16_t test = ADCA_CH0_RES;
 352:	84 e2       	ldi	r24, 0x24	; 36
 354:	92 e0       	ldi	r25, 0x02	; 2
 356:	fc 01       	movw	r30, r24
 358:	80 81       	ld	r24, Z
 35a:	91 81       	ldd	r25, Z+1	; 0x01
 35c:	89 83       	std	Y+1, r24	; 0x01
 35e:	9a 83       	std	Y+2, r25	; 0x02

	//Turn off the BLUE_PWM LED
	PORTD_OUTTGL = BLUE_PWM_LED;
 360:	87 e6       	ldi	r24, 0x67	; 103
 362:	96 e0       	ldi	r25, 0x06	; 6
 364:	20 e4       	ldi	r18, 0x40	; 64
 366:	fc 01       	movw	r30, r24
 368:	20 83       	st	Z, r18
}
 36a:	00 00       	nop
 36c:	0f 90       	pop	r0
 36e:	0f 90       	pop	r0
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	ff 91       	pop	r31
 376:	ef 91       	pop	r30
 378:	9f 91       	pop	r25
 37a:	8f 91       	pop	r24
 37c:	2f 91       	pop	r18
 37e:	0f 90       	pop	r0
 380:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 384:	0f 90       	pop	r0
 386:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 38a:	0f 90       	pop	r0
 38c:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 390:	0f 90       	pop	r0
 392:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 396:	0f 90       	pop	r0
 398:	1f 90       	pop	r1
 39a:	18 95       	reti

0000039c <_exit>:
 39c:	f8 94       	cli

0000039e <__stop_program>:
 39e:	ff cf       	rjmp	.-2      	; 0x39e <__stop_program>
